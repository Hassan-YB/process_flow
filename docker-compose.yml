services:

  postgres-db:
    container_name: process_flow_db
    image: postgres:14.1
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
          - POSTGRES_DB=process_flow_db
    ports:
    - 5434:5432

  web:
    container_name: process_flow
    build:
      context: .
      dockerfile: ./DockerFile
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env
    volumes:
      - ./:/process_flow
    ports:
      - 8000:8000
    depends_on:
      - postgres-db

  # redis:
  #   container_name: process_flow_redis
  #   image: redis:6.2.1-alpine
  #   command: redis-server --requirepass Helloworld123
  #   restart: on-failure
  #   ports:
  #     - 6379:6379  # Redis default port
      
  # celery:
  #   container_name: process_flow_celery
  #   build:
  #     context: .
  #     dockerfile: ./DockerFile
  #   image: celery:4.0.2
  #   volumes:
  #     - ./:/process_flow
  #   command: celery -A process_flow worker --loglevel=INFO --logfile=celery.log
  #   env_file:
  #     - .env
  #   depends_on:
  #     - web
  #     - redis
  #   restart: on-failure

  # celery-beat:
  #   container_name: process_flow_celery_beat
  #   build:
  #     context: .
  #     dockerfile: ./DockerFile
  #   command: celery -A process_flow beat --loglevel=INFO --logfile=celery_beat.log
  #   volumes:
  #     - ./:/process_flow
  #   env_file:
  #     - .env
  #   depends_on:
  #     - web
  #     - redis
  #   restart: on-failure
  
volumes:
  postgres_data:
